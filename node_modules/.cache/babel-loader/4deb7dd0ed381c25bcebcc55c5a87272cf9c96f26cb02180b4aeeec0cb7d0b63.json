{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gabri\\\\Documents\\\\GitHub\\\\RTW3-Week7-NFT-Marketplace\\\\src\\\\components\\\\NFTpage.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./Navbar\";\nimport axie from \"../tile.jpeg\";\nimport { useLocation, useParams } from 'react-router-dom';\nimport MarketplaceJSON from \"../Marketplace.json\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { GetIpfsUrlFromPinata } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NFTPage(props) {\n  _s();\n  const [data, updateData] = useState({});\n  const {\n    tokenId\n  } = useParams();\n  useEffect(() => {\n    // Fetch NFT data using tokenId and update state\n    async function fetchNFTData() {\n      const response = await axios.get(`/api/nft/${tokenId}`);\n      updateData(response.data);\n    }\n    fetchNFTData();\n  }, [tokenId]);\n  async function buyNFT(tokenId) {\n    // Implement the logic to buy NFT\n    try {\n      const response = await axios.post(`/api/buy/${tokenId}`);\n      updateMessage(\"Purchase successful!\");\n    } catch (error) {\n      updateMessage(\"Purchase failed. Please try again.\");\n    }\n  }\n  const [message, updateMessage] = useState(\"\");\n  const [currAddress, updateCurrAddress] = useState(\"0x\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      \"min-height\": \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex ml-20 mt-20\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.image,\n        alt: \"\",\n        className: \"w-2/5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl ml-20 space-y-8 text-white shadow-2xl rounded-lg border-2 p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Name: \", data.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Description: \", data.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Price: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: data.price + \" ETH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Owner: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: data.owner\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Seller: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: data.seller\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [currAddress != data.owner && currAddress != data.seller ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\",\n            onClick: () => buyNFT(tokenId),\n            children: \"Buy this NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-emerald-700\",\n            children: \"You are the owner of this NFT\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-green text-center mt-3\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(NFTPage, \"YZp2F0cArgjOmvhVDrzTsuLgMYM=\", false, function () {\n  return [useParams];\n});\n_c = NFTPage;\nvar _c;\n$RefreshReg$(_c, \"NFTPage\");","map":{"version":3,"names":["Navbar","axie","useLocation","useParams","MarketplaceJSON","axios","useState","useEffect","GetIpfsUrlFromPinata","jsxDEV","_jsxDEV","NFTPage","props","_s","data","updateData","tokenId","fetchNFTData","response","get","buyNFT","post","updateMessage","error","message","currAddress","updateCurrAddress","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","image","alt","name","description","price","owner","seller","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gabri/Documents/GitHub/RTW3-Week7-NFT-Marketplace/src/components/NFTpage.js"],"sourcesContent":["import Navbar from \"./Navbar\";\r\nimport axie from \"../tile.jpeg\";\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport MarketplaceJSON from \"../Marketplace.json\";\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { GetIpfsUrlFromPinata } from \"../utils\";\r\n\r\nexport default function NFTPage (props) {\r\n\r\nconst [data, updateData] = useState({});\r\nconst { tokenId } = useParams();\r\n\r\nuseEffect(() => {\r\n    // Fetch NFT data using tokenId and update state\r\n    async function fetchNFTData() {\r\n        const response = await axios.get(`/api/nft/${tokenId}`);\r\n        updateData(response.data);\r\n    }\r\n    fetchNFTData();\r\n}, [tokenId]);\r\n\r\nasync function buyNFT(tokenId) {\r\n    // Implement the logic to buy NFT\r\n    try {\r\n        const response = await axios.post(`/api/buy/${tokenId}`);\r\n        updateMessage(\"Purchase successful!\");\r\n    } catch (error) {\r\n        updateMessage(\"Purchase failed. Please try again.\");\r\n    }\r\n}\r\nconst [message, updateMessage] = useState(\"\");\r\nconst [currAddress, updateCurrAddress] = useState(\"0x\");\r\n\r\n    return(\r\n        <div style={{\"min-height\":\"100vh\"}}>\r\n            <Navbar></Navbar>\r\n            <div className=\"flex ml-20 mt-20\">\r\n                <img src={data.image} alt=\"\" className=\"w-2/5\" />\r\n                <div className=\"text-xl ml-20 space-y-8 text-white shadow-2xl rounded-lg border-2 p-5\">\r\n                    <div>\r\n                        Name: {data.name}\r\n                    </div>\r\n                    <div>\r\n                        Description: {data.description}\r\n                    </div>\r\n                    <div>\r\n                        Price: <span className=\"\">{data.price + \" ETH\"}</span>\r\n                    </div>\r\n                    <div>\r\n                        Owner: <span className=\"text-sm\">{data.owner}</span>\r\n                    </div>\r\n                    <div>\r\n                        Seller: <span className=\"text-sm\">{data.seller}</span>\r\n                    </div>\r\n                    <div>\r\n                    { currAddress != data.owner && currAddress != data.seller ?\r\n                        <button className=\"enableEthereumButton bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded text-sm\" onClick={() => buyNFT(tokenId)}>Buy this NFT</button>\r\n                        : <div className=\"text-emerald-700\">You are the owner of this NFT</div>\r\n                    }\r\n                    \r\n                    <div className=\"text-green text-center mt-3\">{message}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}